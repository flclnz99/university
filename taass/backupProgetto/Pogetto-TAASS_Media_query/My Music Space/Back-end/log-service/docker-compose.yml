services:


  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - mynetwork


  mongoLogDB:
    image: mongo
    container_name: mongoLogDB
    restart: always
    ports:
      - "27019:27017"
    volumes:
      - mongodatalog:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    networks:
      - mynetwork


  mongoDB:
    image: mongo
    container_name: mongoDB
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    networks:
      - mynetwork


  #######################################
  # Mongo express
  #######################################
#
#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express
#    restart: always
#    ports:
#      - "8081:8081"
#    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
#      - ME_CONFIG_MONGODB_SERVER=mongoDB
#
#    depends_on:
#      - mongoDB
#    networks:
#      - mynetwork


  #######################################
  # API GATEWAY
  #######################################

  api-gateway-service:
    container_name: api-gateway-service
    build:
      context: ../api-gateway-service
      dockerfile: Dockerfile
    image: api-gateway-service
    ports:
      - "8080:8080"
    environment:
      - EUREKA_SERVER=http://discovery-service:8761/eureka/
    depends_on:
      - rabbitmq
      - discovery-service
    restart: always
    networks:
      - mynetwork



  #######################################
  # discovery-service
  #######################################

  discovery-service:
    container_name: discovery-service
    build:
      context: ../discovery-service
      dockerfile: Dockerfile
    image: discovery-service:latest
    ports:
      - "8761:8761"
    restart: always
    depends_on:
      - rabbitmq
    networks:
      - mynetwork


  #######################################
  # log-service container
  #######################################

  log-service:
    container_name: log-service
    build:
      dockerfile: Dockerfile
    image: log-service:latest
    ports:
      - "8096:8096"
    environment:
      - EUREKA_SERVER=http://discovery-service:8761/eureka/
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    networks:
      - mynetwork
    depends_on:
      - rabbitmq
      - discovery-service
      - mongoLogDB
    restart: always



  #######################################
  # chat-service container
  #######################################

  chat-service:
    container_name: chat-service
    build:
      context: ../chat-service
      dockerfile: Dockerfile
    image: chat-service:latest
    ports:
      - "8091:8091"
    environment:
      - EUREKA_SERVER=http://discovery-service:8761/eureka/
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    networks:
      - mynetwork
    depends_on:
      - rabbitmq
      - discovery-service
      - mongoDB
      - mongoLogDB
      - mongo-log-express
      - log-service
    restart: always


  mongo-log-express:
    image: mongo-express
    container_name: mongo-log-express
    restart: always
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongoLogDB
    depends_on:
      - mongoLogDB
    networks:
      - mynetwork


volumes:
  mongodatalog:
  mongodata:
  persistent:

networks:
  mynetwork:
    driver: bridge
