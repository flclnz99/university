version: '3.7'

services:



  discovery-service:
    container_name: discovery-service
    build:
      context: discovery-service
      dockerfile: Dockerfile
    image: discovery-service:latest
    ports:
      - "8761:8761"
    restart: always
    networks:
      - mynetwork



  #######################################
  # API GATEWAY
  #######################################

  api-gateway-service:
    container_name: api-gateway-service
    build:
      context: api-gateway-service
      dockerfile: Dockerfile
    image: api-gateway-service
    ports:
      - "8080:8080"
    environment:
      - EUREKA_SERVER=http://discovery-service:8761/eureka/
    depends_on:
      - discovery-service
    restart: always
    networks:
      - mynetwork



  #######################################
  # Demo1 container
  #######################################

  demo1:
    container_name: demo1
    build:
      context: demo1
      dockerfile: Dockerfile
    image: demo1:latest
    ports:
      - "8090:8090"
    environment:
      - EUREKA_SERVER=http://discovery-service:8761/eureka/
    restart: always
    depends_on:
      - discovery-service
    networks:
      - mynetwork


volumes:
  persistent:

networks:
  mynetwork:
    driver: bridge






  # PER ACCEDERE A MYSQL DA PHPMYADMIN:

  # SPIEGAZIONE
  # per creare tutti i container e lanciare il progetto:
  # prima creare una network nuova con "docker network create mynetwork"
  # dopo lanciare il comando: sudo docker-compose -f docker-compose.yml up --force-recreate -V
  # per stoppare tutto usare: docker-compose -f docker-compose.yml down


# localhost:80
# Username:   root
# Password:   test


# Se non si riescono a chiudere i container
# sudo systemctl stop docker.socket
# sudo systemctl stop docker
# sudo systemctl restart docker
